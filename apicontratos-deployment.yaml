# ==========================
# CONFIGMAP
# ==========================
apiVersion: v1
kind: ConfigMap
metadata:
  name: apicontratos-config
data:
  DB_HOST: mysql
  DB_NAME: contratosdb

---
# ==========================
# SECRET
# ==========================
apiVersion: v1
kind: Secret
metadata:
  name: apicontratos-secret
type: Opaque
stringData:
  DB_USER: apiuser
  DB_PASS: apipass

---
# ==========================
# DEPLOYMENT (API Contratos)
# ==========================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apicontratos
spec:
  replicas: 2
  selector:
    matchLabels:
      app: apicontratos
  template:
    metadata:
      labels:
        app: apicontratos
    spec:
      containers:
      - name: apicontratos
        image: thiagodarlei/apicontratos:1.0
        envFrom:
          - configMapRef:
              name: apicontratos-config
          - secretRef:
              name: apicontratos-secret
        ports:
        - containerPort: 8080
        readinessProbe:   # Checa se API + banco estão OK
          httpGet:
            path: /contratos   # esse endpoint validar conexão com MySQL
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5
        livenessProbe:    # Reinicia caso a API trave
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 15
          timeoutSeconds: 5

---
# ==========================
# SERVICE (NodePort)
# ==========================
apiVersion: v1
kind: Service
metadata:
  name: apicontratos-service
spec:
  type: NodePort
  selector:
    app: apicontratos
  ports:
    - port: 80         # porta interna do service
      targetPort: 8080 # porta do container
      nodePort: 30080  # porta exposta no Node
